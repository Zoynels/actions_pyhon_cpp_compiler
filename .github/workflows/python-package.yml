name: Python + CPP package

on:
  push:
    branches: [ master ]
    paths:
      - '**'
      - '!**.md'
      - '!.gitattributes'
      - '!.gitmodules'
      - '!.gitignore'
      - '!external/**'
      - '!docs/**'
  pull_request:
    branches: [ master ]
    paths:
      - '**'
      - '!**.md'
      - '!.gitattributes'
      - '!.gitmodules'
      - '!.gitignore'
      - '!external/**'
      - '!docs/**'


jobs:
  build_test_ubuntu_py38_x64:
    # test build only on one config, if all ok, then run same steps on other configs
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true # fail-fast: true meant that if one test fail, then all running tests will be canceled
      matrix:
        config:
        #- { name: "Ubuntu (py38_x64)", os: ubuntu-latest, python-version: 3.8, architecture: x64, artifact_name: "ubuntu-latest.py38_x64.whl.zip" }
        - { name: "Windows, g++ (py38_x64)", os: windows-latest, python-version: 3.8, architecture: x64, cc: "gcc", cxx: "g++", artifact_name: "windows-latest.gcc.py38_x64.whl.zip" }
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python ${{ matrix.config.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python-version }}
        architecture: ${{ matrix.config.architecture }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel flake8 pytest

    - name: Build package (setup.py)
      run: |
        cd pkg
        python setup.py build --build-lib=lib bdist_wheel
        cd ..

    - name: Install package (dist/*.whl)
      run: |
        cd pkg
        python install_dist.py
        cd ..

    - name: Run show_info.py
      run: |
        python show_info.py

    - name: Test with builtin test function
      run: |
        python -c "import actions_python_cpp_compiler; actions_python_cpp_compiler.run_tests()"

    - name: Upload wheel artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.artifact_name }}
        path: pkg/dist/*.whl






  # Script is same, but matrix is expanded
  build_all_other:
    needs: [build_test_ubuntu_py38_x64]
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false # fail-fast: false meant that if one test fail, then other tests will continue running
      matrix:
        config:
        # python 3.7 (macOS and Ubuntu has no x86 version)
        #- { name: "Windows MSVC (py37_x86)", os: windows-latest, python-version: 3.7, architecture: x86, artifact_name: "windows-latest.py37_x86.whl.zip" }
        #- { name: "Windows MSVC (py37_x64)", os: windows-latest, python-version: 3.7, architecture: x64, artifact_name: "windows-latest.py37_x64.whl.zip" }
        #- { name: "macOS (py37_x64)", os: macos-latest, python-version: 3.7, architecture: x64, artifact_name: "macos-latest.py37_x64.whl.zip" }
        #- { name: "Ubuntu (py37_x64)", os: ubuntu-latest, python-version: 3.7, architecture: x64, artifact_name: "ubuntu-latest.py37_x64.whl.zip" }

        # python 3.8 (macOS and Ubuntu has no x86 version)
        #- { name: "Windows MSVC (py38_x86)", os: windows-latest, python-version: 3.8, architecture: x86, artifact_name: "windows-latest.py38_x86.whl.zip" }
        #- { name: "Windows MSVC (py38_x64)", os: windows-latest, python-version: 3.8, architecture: x64, artifact_name: "windows-latest.py38_x64.whl.zip" }
        #- { name: "macOS (py38_x64)", os: macos-latest, python-version: 3.8, architecture: x64, artifact_name: "macos-latest.py38_x64.whl.zip" }
        # already run in build_test_ubuntu_py38_x64
        - { name: "Ubuntu (py38_x64)", os: ubuntu-latest, python-version: 3.8, architecture: x64, artifact_name: "ubuntu-latest.py38_x64.whl.zip" }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python ${{ matrix.config.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python-version }}
        architecture: ${{ matrix.config.architecture }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel flake8 pytest

    - name: Build package (setup.py)
      run: |
        cd pkg
        python setup.py build --build-lib=lib bdist_wheel
        cd ..

    - name: Install package (dist/*.whl)
      run: |
        cd pkg
        python install_dist.py
        cd ..

    - name: Run show_info.py
      run: |
        python show_info.py

    - name: Test with builtin test function
      run: |
        python -c "import actions_python_cpp_compiler; actions_python_cpp_compiler.run_tests()"

    - name: Upload wheel artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.artifact_name }}
        path: pkg/dist/*.whl
